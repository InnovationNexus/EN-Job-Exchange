//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ENJobExchange.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Account_Employer> Account_Employer { get; set; }
        public DbSet<Account_EN> Account_EN { get; set; }
        public DbSet<Audit_Login> Audit_Login { get; set; }
        public DbSet<Contact> Contacts { get; set; }
        public DbSet<EN> ENs { get; set; }
        public DbSet<FlaggedPosting> FlaggedPostings { get; set; }
        public DbSet<JobPosting> JobPostings { get; set; }
        public DbSet<Industry> Industries { get; set; }
        public DbSet<Industry_Category> Industry_Category { get; set; }
        public DbSet<JobCategory> JobCategories { get; set; }
        public DbSet<ReferralStatus> ReferralStatus { get; set; }
        public DbSet<ReferralType> ReferralTypes { get; set; }
        public DbSet<Skill> Skills { get; set; }
        public DbSet<Location> Locations { get; set; }
        public DbSet<Partner> Partners { get; set; }
        public DbSet<Position> Positions { get; set; }
        public DbSet<Referral> Referrals { get; set; }
        public DbSet<ReferralNote> ReferralNotes { get; set; }
        public DbSet<tblREF_USZipCodes> tblREF_USZipCodes { get; set; }
        public DbSet<LINK_Partner_to_Industry> LINK_Partner_to_Industry { get; set; }
    
        public virtual ObjectResult<prcSearchJobPostings_Result> prcSearchJobPostings(string zipCode, Nullable<int> distance, string keyword, Nullable<long> industryID)
        {
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var industryIDParameter = industryID.HasValue ?
                new ObjectParameter("IndustryID", industryID) :
                new ObjectParameter("IndustryID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSearchJobPostings_Result>("prcSearchJobPostings", zipCodeParameter, distanceParameter, keywordParameter, industryIDParameter);
        }
    
        public virtual ObjectResult<prcSearchJobPostings_Result> prcSearchJobPostings_WithIndustryCategoryCode(string zipCode, Nullable<int> distance, string keyword, string industryCategoryCode)
        {
            var zipCodeParameter = zipCode != null ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(string));
    
            var distanceParameter = distance.HasValue ?
                new ObjectParameter("Distance", distance) :
                new ObjectParameter("Distance", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var industryCategoryCodeParameter = industryCategoryCode != null ?
                new ObjectParameter("IndustryCategoryCode", industryCategoryCode) :
                new ObjectParameter("IndustryCategoryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<prcSearchJobPostings_Result>("prcSearchJobPostings_WithIndustryCategoryCode", zipCodeParameter, distanceParameter, keywordParameter, industryCategoryCodeParameter);
        }
    }
}
